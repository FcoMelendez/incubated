{
  "$schema": "http://json-schema.org/schema",
  "$schemaVersion": "0.0.1",
  "$id": "https://smart-data-models.github.io/dataModel.Transportation/EmergencyVehicle/schema.json",
  "title": "Smart Data models -EmergencyVehicle schema",
  "modelTags": "",
  "description": "Data model for emergency vehicles.",
  "type": "object",
  "required": [
    "id",
    "type"
  ],
  "allOf": [
    {
      "$ref": "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/GSMA-Commons"
    },
    {
      "$ref": "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/Location-Commons"
    },
    {
      "properties": {
        "bearing": {
          "type": "number",
          "description": "Property. Model:'https://schema.org/Number'. Gives the vehicle GPS angle measured in a clockwise direction from the True North. SameAs 'bearing' field from GTFS Realtime message-Position(https://developers.google.com/transit/gtfs-realtime/reference#message-position)"
        },
        "speed": {
          "type": "number",
          "description": "Property. Model:'https://schema.org/Number'. Gives the Speed of the vehicle.SameAs 'speed' field from GTFS Realtime message-Position(https://developers.google.com/transit/gtfs-realtime/reference#message-position)"
        },
        "fuelEfficiency": {
          "type": "number",
          "description": "Property. Model:'https://schema.org/Number'. The distance traveled per unit of fuel used."
        },
        "fuelFilled": {
          "type": "number",
          "description": "Property. Model:'https://schema.org/Number'. Amount of fuel filled to the vehicle corresponding to this observation."
        },
        "vehicleAltitude": {
          "type": "number",
          "description": "Property. Model:'https://schema.org/Number'. Gives the current altitude of the vehicle using GPS"
        },
        "serviceOnDuty": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/Text'. Nature of service provided by emergency vehicle corresponding to this observation. ENUM: [YES, NO]. YES indicates the emergency vehicle corresponding to this observation is attending to/ servicing to an emergency call of duty and is NO otherwise."
        },
        "emergencyVehicleType": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/Text'. Type of emergency vehicle corresponding to this observation. ENUM: [POLICE CAR, POLICE MOTORCYCLE, POLICE VAN, POLICE S.W.A.T, FIRE ENGINE, WATER TENDER, AIR AMBULANCE, AMBULANCE, MOTORCYCLE AMBULANCE, RESCUE VEHICLE, HAZARDOUS MATERIALS APPARATUS, TOW TRUCK]"
        },
        "license_plate": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/Text'. Gives the License Plate number of the vehice. SameAs: 'license_plate' field from GTFS Realtime message-VehicleDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor)"
        },
        "deviceBatteryStatus": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/Text'. Gives the Battery charging status of the reporting device(Connected, Disconnected)."
        },
        "deviceSimNumber": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/Text'. Gives the sim number of the device in the vehicle."
        },
        "fuelType": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/Text'. The type of fuel suitable for the engine or engines of the vehicle corresponding to this observation."
        },
        "vehicleTrackerDevice": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/Text'. Installation status of the GPS device or the tracking device fitted to the vehicle corresponding to this observation."
        },
        "vehicleType": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/Text'. Describes the type of vehicle corresponding to this observation, could be hopper, compactor, tipper, dumper in case of solid waste management vehicles, BRT mini bus, BRT bus, city bus in case of ITMS vehicles, Ambulance, Fire tender, Police van etc, in case of emergency vehicles and Moped/Scooter, Motor Cycle, Autorickshaw, Private car/ Jeep car, Tempo, Bus, E-Moped/E-Scooter/E-Motor Cycle, Public motor in case of vehicle registration."
        },
        "ignitionStatus": {
          "type": "string",
          "enum": [
            "Y",
            "N"
          ],
          "description": "Property. Model:'https://schema.org/Text. Gives the ignition status of the vehicle.(Y, N)"
        },
        "vehicleRunningStatus": {
          "type": "string",
          "enum": [
            "running",
            "waiting",
            "stopped"
          ],
          "description": "Property. Model:'https://schema.org/Text. Moving status of the vehicle, one of running, waiting, stopped."
        },
        "observationDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Property. Model:'https://schema.org/Text'. Last reported time of observation."
        },
        "municipalityInfo": {
          "type": "object",
          "description": "Property. Model:'https://schema.org/Text. Municipality information corresponding to this observation.",
          "properties": {
            "district": {
              "type": "string",
              "description": "Property. Model:'https://schema.org/Text'. District name corresponding to this observation."
            },
            "ulbName": {
              "type": "string",
              "description": "Property. Model:'https://schema.org/Text'. Name of the Urban Local Body corresponding to this observation."
            },
            "cityID": {
              "type": "string",
              "description": "Property. Model:'https://schema.org/Text'. City ID corresponding to this observation."
            },
            "wardID": {
              "type": "string",
              "description": "Property. Model:'https://schema.org/Text'. Ward ID corresponding to this observation."
            },
            "stateName": {
              "type": "string",
              "description": "Property. Model:'https://schema.org/Text'. Name of the state corresponding to this observation."
            },
            "cityName": {
              "type": "string",
              "description": "Property. Model:'https://schema.org/Text'. City name corresponding to this observation"
            },
            "zoneName": {
              "type": "string",
              "description": "Property. Model:'https://schema.org/Text'. Zone name corresponding to this observation."
            },
            "zoneID": {
              "type": "string",
              "description": "Property. Model:'https://schema.org/Text'. Zone ID corresponding to this observation."
            },
            "wardName": {
              "type": "string",
              "description": "Property. Model:'https://schema.org/Text'. Ward name corresponding to this observation."
            },
            "wardNum": {
              "type": "number",
              "description": "Property. Model:'https://schema.org/Number'. Ward number corresponding to this observation."
            }
          }
        }
      }
    }
  ]
}